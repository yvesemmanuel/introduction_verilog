$date
	Tue Jul 13 08:35:38 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TB_d $end
$var wire 1 ! EQ_OUT $end
$var wire 1 " GT_OUT $end
$var wire 1 # LT_OUT $end
$var reg 8 $ A [7:0] $end
$var reg 8 % B [7:0] $end
$var reg 1 & EQ_IN $end
$var reg 1 ' GT_IN $end
$var reg 1 ( LT_IN $end
$scope module uut $end
$var wire 8 ) A [7:0] $end
$var wire 8 * B [7:0] $end
$var wire 1 + EQ1 $end
$var wire 1 , EQ_IN $end
$var wire 1 ! EQ_OUT $end
$var wire 1 - GT1 $end
$var wire 1 . GT_IN $end
$var wire 1 " GT_OUT $end
$var wire 1 / LT1 $end
$var wire 1 0 LT_IN $end
$var wire 1 # LT_OUT $end
$scope module C1 $end
$var wire 4 1 A [3:0] $end
$var wire 4 2 B [3:0] $end
$var wire 1 , EQ_IN $end
$var wire 1 . GT_IN $end
$var wire 1 0 LT_IN $end
$var reg 1 3 EQ_OUT $end
$var reg 1 4 GT_OUT $end
$var reg 1 5 LT_OUT $end
$upscope $end
$scope module C2 $end
$var wire 4 6 A [3:0] $end
$var wire 4 7 B [3:0] $end
$var wire 1 + EQ_IN $end
$var wire 1 - GT_IN $end
$var wire 1 / LT_IN $end
$var reg 1 8 EQ_OUT $end
$var reg 1 9 GT_OUT $end
$var reg 1 : LT_OUT $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0:
09
18
b0 7
b0 6
05
04
13
b0 2
b0 1
x0
0/
x.
0-
x,
1+
b0 *
b0 )
x(
x'
x&
b0 %
b0 $
0#
0"
1!
$end
#10000
b1100 7
b1100 6
b11000000 %
b11000000 *
b11000000 $
b11000000 )
#20000
08
0!
1:
1#
b100 6
b1000000 $
b1000000 )
#30000
19
1"
0:
0#
b1111 6
b11110000 $
b11110000 )
#40000
09
0"
18
1!
b0 7
b0 6
b0 %
b0 *
b0 $
b0 )
#50000
19
1"
08
0!
b111 7
b1111 6
b1110000 %
b1110000 *
b11110000 $
b11110000 )
#60000
09
0"
1:
1#
b1000 7
b101 6
b10000000 %
b10000000 *
b1010000 $
b1010000 )
#180000
